class Artifact_GlobeInvulnerability extends RPGArtifact
 HideDropDown
 NotPlaceable;

#EXEC AUDIO IMPORT FILE="sounds\PickupClunk1.wav" NAME="PickupClunk1"

var Material EffectOverlay;
var Controller InstigatorController; // remember the Controller we set god mode to

//Heaven of Relics, extends Inv... RPGArtifact extends Powerups extends Inventory ...
//We might want to make a new class DWRPGArtifact to extend RPGArtifact
var int HUDIconX,HUDIconY;
var PlayerController PlayerOwner;
var HudOverlay MyHudOverlay;
var class<HUD_DWRPGHudOverlay> MyHudOverlayClass;

var float ScreenFlashIntensity;
var vector ScreenFlashColor;

//
var Emitter MyEmitter;
var class<Emitter> MyEmitterClass;
//


replication
{
   reliable if(ROLE == ROLE_Authority)
      AddHudOverlay, RemoveHudOverlay, EnableEffects, RemoveEffects;
}

simulated event PostNetBeginPlay()
{
   local PlayerController PC;

   if (Owner != None)
   {
      if (Pawn(Owner) != None)
      {
         PC=Level.GetLocalPlayerController();
         if (PC != None && PC.Pawn == Pawn(Owner))
         {
            PlayerOwner = PC;
         }
      }
   }
}

simulated function Destroyed()
{
   if (Instigator != None)
   {
      if (PlayerOwner != None)
      {
         RemoveEffects(false);
      }
   }
   Super.Destroyed();
}




////

function BotConsider()
{
   if (Instigator.Controller.Adrenaline < 30)
      return;

   if (bActive && (Instigator.Controller.Enemy == None || !Instigator.Controller.CanSee(Instigator.Controller.Enemy)))
      Activate();
   else if ( !bActive && Instigator.Controller.Enemy != None && Instigator.Health < 70 && Instigator.Controller.CanSee(Instigator.Controller.Enemy) && NoArtifactsActive() && FRand() < 0.7 )
      Activate();
}

state Activated
{
   simulated function BeginState()
   {
      //local Pawn P;
      //local PlayerController PC;

      //if (Instigator != None)
      //   PC = Level.GetLocalPlayerController();
      if (InstigatorController != None)
      {
         Warn("A player picked up Invulnerability while another still has the same actor active!");
         Destroy();
      }
      else
      {
         //Set the invulnerability
         InstigatorController = Instigator.Controller;
         InstigatorController.bGodMode = true;

         //Add the HUD overlay and flash the screen
         EnableEffects(Instigator);

         //Add the pawn overlay
         Instigator.SetOverlayMaterial(EffectOverlay, 999, true);  //@FIXME  - Time was: Instigator.Controller.Adrenaline / CostPerSec, but this doesn't account for players gaining adrenaline from kills, so just set it really high
         bActive = true;

         if (MyEmitter == None && MyEmitterClass != None)
            MyEmitter = Instigator.Spawn(MyEmitterClass,Instigator,,Instigator.Location,Instigator.Rotation);
         MyEmitter.SetBase(Instigator);
      }
   }

   simulated function EndState()
   {
      if (InstigatorController != None)
      {
         InstigatorController.bGodMode = false;
         InstigatorController = None;
      }
      if (Instigator != None)
      {
         Instigator.SetOverlayMaterial(EffectOverlay, -1, true);

         RemoveEffects(true);
      }
      
      if (MyEmitter != None)
         MyEmitter.Destroy();

      bActive = false;
   }
}

simulated function AddHudOverlay(PlayerController PC)
{
   MyHudOverlay = Spawn(default.MyHudOverlayClass);
   PC.MyHUD.AddHudOverlay(MyHudOverlay);
}

simulated function RemoveHudOverlay(PlayerController PC)
{
   PC.MyHUD.RemoveHudOverlay(MyHudOverlay);
}

simulated function EnableEffects(Pawn P)
{
   //Set the HUD Overlay
   AddHudOverlay(PlayerOwner);

   //Flash screen
   PlayerOwner.ClientFlash(ScreenFlashIntensity, ScreenFlashColor);

   //Play sound
   Instigator.PlaySound(ActivateSound,SLOT_Interact,1.5 * Instigator.TransientSoundVolume,,Instigator.TransientSoundRadius);
}

simulated function RemoveEffects(bool bWasActive)
{
   RemoveHudOverlay(PlayerOwner);

   if (bWasActive)
   {
      PlayerOwner.ClientFlash(ScreenFlashIntensity, ScreenFlashColor);

      Instigator.PlaySound(DeActivateSound,SLOT_Interact,1.5 * Instigator.TransientSoundVolume,,Instigator.TransientSoundRadius);
   }

   if (MyEmitter != None)
      MyEmitter.Destroy();
}

defaultproperties
{
     EffectOverlay=Shader'fpsRPGTex.DomShaders.InvulnerabilityOverlay'
     HUDIconX=90
     HUDIconY=50
     MyHudOverlayClass=Class'fpsRPG.HUD_GlobeInvulnerabilityOverlay'
     ScreenFlashIntensity=0.450000
     ScreenFlashColor=(X=700.000000,Y=590.000000)
     MyEmitterClass=Class'fpsRPG.FX_GlobeActiveEmitter'
     CostPerSec=12
     ActivateSound=Sound'fpsRPG.PickupClunk1'
     DeActivateSound=Sound'fpsRPG.PickupClunk1'
     PickupClass=Class'fpsRPG.Artifact_GlobeInvulnerabilityPickup'
     IconMaterial=Shader'fpsRPGTex.Globe.GlobeShader'
     ItemName="Globe of Invulnerability"
}
